import sys
from pyspark import SparkConf, SparkContext
from pyspark.sql.session import SparkSession
import re
import pyspark.sql.functions as f
import pandas as pd
import matplotlib as plt
from pyspark.sql.functions import udf


conf = SparkConf().setAppName('fechasOcupacion')
sc = SparkContext(conf = conf)
spark = SparkSession(sc)

path = "airbnb_madrid.csv"

def get_ocupados(available):
	count = 0
	if (available == "f"):
		count = count + 1
	return count
	
def get_libres(available):
	count = 0
	if (available == "t"):
		count = count + 1
	return count

getOcupados = udf(get_ocupados)

getLibres = udf(get_libres)


dfMadrid = spark.read.option("header", "true").csv(path)

dfMadrid = dfMadrid.select(dfMadrid['listing_id'].alias('id'),dfMadrid['date'][6:2].alias('Mes'), dfMadrid.available, dfMadrid.adjusted_price)

# creo los 12 dfs de numero de accidentes por mes correspondiente a cada nivel de severidad
mes1Libres   = dfMadrid.filter(f.col('Mes') == "09").filter(f.col('available') == "t").count().show()
mes1Ocupados = dfMadrid.filter(f.col('Mes') == "09").filter(f.col('available') == "f").count().withColumnRenamed("count","SEPTIEMBRE OCUPADOS".show()


'''
#juntar todas en una df
dfFinal = severidad1.join(severidad2, on=["Start_Time"], how ='full')
dfFinal = dfFinal.join(severidad3, on=["Start_Time"], how ='full')
dfFinal = dfFinal.join(severidad4, on=["Start_Time"], how ='full')
dfFinal = dfFinal.sort(dfFinal["Start_Time"])
dfFinal = dfFinal.fillna(value=0)
'''

#CREAR 12 DF PARA UNO PARA CADA MES
'''
dfSeptiembreMadrid = dfMadrid1.filter(dfMadrid1["Mes"] == "09")
ocupadosSepMadrid = dfSeptiembreMadrid.withColumn("OCUPADOS", getOcupados(F.col("available")))
ocupadosMadrid = ocupadosSepMadrid.agg({"OCUPADOS" : 'sum'})
#libresSepMadrid = dfSeptiembreMadrid.withColumn("LIBRES", getLibres(F.col("available")))
#libresMadrid = libresSepMadrid.agg({"LIBRES" : 'sum'})

ocupadosMadridPandas = pd.DataFrame(ocupadosMadrid, columns= ["SUMA OCUPADOS"])


meses = ["10", "11", "12", "01", "02", "03", "04", "05", "06", "07", "08"]
for mes in meses:

	dfMesMadrid = dfMadrid1.filter(dfMadrid1["Mes"] == mes)
	ocupadosMesMadrid = dfMesMadrid.withColumn("OCUPADOS", getOcupados(F.col("available")))
	df = ocupadosMesMadrid.agg({"OCUPADOS" : 'sum'})
	dfPandasMes = pd.DataFrame(df, columns=["SUMA OCUPADOS"])
	#ocupadosMadrid.union(df)
	ocupadosMadridPandas = pd.concat([ocupadosMadridPandas, dfPandasMes])
	
	#libresMesMadrid = dfMesMadrid.withColumn("LIBRES", getLibres(F.col("available")))
	#libresMadrid.union(libresMesMadrid.agg({"LIBRES" : 'sum'}))

display(ocupadosMadridPandas)
#libresMadrid.show()
'''
